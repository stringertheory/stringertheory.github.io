Title: Style ordered list numbers with different font and aligned decimal points
Date: 2015-02-10
Category: Article
Slug: styling-ordered-lists-aligned-decimal
Authors: Mike Stringer
Tags: bunga, typography
Type: article


> Good typography reinforces the meaning of the text.
>
> <cite><a href="http://practicaltypography.com/what-is-good-typography.html">Matthew Butterick</a></cite>

You'd think with all of the listicles out there, there would be lots of gr


Fortunately, by combining a couple of lesser-known CSS properties you
can add numbers to your ordered lists that look just the way you want
them to. In fact, after this tutorial, youâ€™ll be able to change fonts,
colors and nearly every other style attribute of numbers in lists.

The secret is twofold: first, hide the regular numbers entirely, then
use the ::before pseudo-element to add the numbers back.Web browsers
also dictate the way that bulleted and numbered lists should look. For
example, browsers make it hard to change the style of bullets in
unordered lists or numbers in ordered lists. Sure, there are a few CSS
styles like list-style-type, list-style-image, and
list-style-position, but doing something as simple as changing the
color of the numbers in the list usually involves some weird HTML/CSS
workarounds.

http://practicaltypography.com/bulleted-and-numbered-lists.html

```scss
11111111112222222222333333333344444444445555555555666666666677777777778888888888
ol, ul {
  display: block;
  padding-left: 2 * $article-margin;
  li {
    margin: 0.5em 0;
  }
}
ol {
  counter-reset: mylist 0;
  list-style-type: decimal;
  li {
    list-style: none;
    position: relative;
    &:before {
	  counter-increment: mylist 1;
      content: counter(mylist, decimal) ".";
      position: absolute;
      left: -2 * $article-margin;
      width: 2 * $article-margin - (1 / 3) * ($font-size-base / $font-m);
      font-size: $font-size-base / $font-m;
      text-align: right;
      top: 0.5 * ($font-size-base - ($font-size-base / $font-m));
      font-family: $font-family-monospace;
      font-weight: 700;
    }
  }
}
```

```python
import sys

for i in range(10):
	print i

class Hi(object):
	a = 1
	q = {
		'hi': 1,
		'hello': 2,
	}
	pass

@wrapping
def yomama(i, j, k):
	return i

```

I like the results better for a few reasons:

1. They are nice.
2. They are very nice.
3. They look better.
